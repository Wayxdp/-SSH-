package com.ht.controller;

import com.ht.bean.Agency;
import com.ht.bean.Building;
import com.ht.bean.Buildings;
import com.ht.bean.House;
import com.ht.common.Constants;
import com.ht.common.ControllerResult;
import com.ht.common.Pager;
import com.ht.service.AgencyService;
import com.ht.service.BuildingService;
import com.ht.service.HouseService;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

public class AgencyController extends AppController {

    private AgencyService agencyService;
    private BuildingService buildingService;
    private ControllerResult controllerResult;
    private HouseService houseService;

    private String buildingId;

    private int pager;
    private int total;

    private List<Object> rows;

    //添加楼栋
    public String addBuilding() {
        Building b1 = new Building(); //楼栋
        b1.setName("楼栋的名称");
        b1.setTotal_room(12);
        b1.setTotal_lift(12);
        b1.setTotal_floor(12);
        b1.setFloor_rooms(12);
        b1.setStatus(Constants.YES_STATUS);
        b1.setCreated_time(Calendar.getInstance().getTime()); //获取当期系统时间
        Buildings s = new Buildings(); // 楼盘
        s.setId("e31d51b0cba044609b32ae3203cd6de7");
        b1.setBuildings(s);
        Agency agency = new Agency();
        agency.setId("82d91e8f40b943f88ee5cf6cce0d81b2");
        b1.setAgency(agency);
        buildingService.save(b1);
        return SUCCESS;
    }

    //修改楼栋
    public String updateBuilding() {
        Building b2 = new Building();
        b2.setId("402880b25e1c4241015e1c428d530000");
        b2.setName("修改楼栋的名称");
        b2.setTotal_room(1234);
        b2.setTotal_lift(1234);
        b2.setTotal_floor(1234);
        b2.setFloor_rooms(1234);
        b2.setCreated_time(Calendar.getInstance().getTime()); //获取当期系统时间
        b2.setStatus(Constants.YES_STATUS); //修改状态
        Buildings s2 = new Buildings(); // 楼盘
        s2.setId("e31d51b0cba044609b32ae3203cd6de7");
        b2.setBuildings(s2);
        buildingService.update(b2);
        return SUCCESS;
    }

    //更改楼栋状态（冻结，激活）
    public String updateStatus() {
        String statusStr = request.getParameter("status");
        if (statusStr != null)  {
            short status = Short.valueOf(statusStr);
            buildingService.updateStatus(buildingId,status);
            if("1".equals(statusStr)) {
                controllerResult = ControllerResult.getSuccessResult("楼栋状态可用");
            }else if("2".equals(statusStr)) {
                controllerResult = ControllerResult.getFailResult("楼栋状态不可用");
            }
        }

        return SUCCESS;
    }

    /***
     * 户型的增加
     * @return
     */
    public String addHouse() {
        House h1 = new House();
        h1.setName("户型的名称");
        h1.setLogo("户型的登入图片");
        h1.setIntro("户型的简介");
        h1.setArea(123.12);
        h1.setUnit_price(100.12); //户型的参考报价
        h1.setCreated_time(Calendar.getInstance().getTime());
        h1.setStatus(Constants.YES_STATUS); //1
        Buildings s = new Buildings();
        s.setId("Qpf0SxOVUjUkWySXOZ16kw==");
        h1.setBuildings(s);
        houseService.save(h1);
        return SUCCESS;
    }

    /***
     * 户型的修改
     * @return
     */
    public String updateHouse() {
        House h2 = new House();
        h2.setId("44c07bb6c13949729ca520a4f15162c2");
        h2.setName("修改户型的名称");
        h2.setIntro("修改户型的介绍");
        h2.setArea(123.23);
        h2.setLogo("户型的图片");
        h2.setCreated_time(Calendar.getInstance().getTime());
        h2.setStatus(Constants.YES_STATUS);
        Buildings s2 = new Buildings();//楼盘
        s2.setId("Qpf0SxOVUjUkWySXOZ16kw==");
        h2.setBuildings(s2);
        houseService.update(h2);
        return SUCCESS;
    }

    /***
     * 户型的激活和冻结
     * @return
     */
    public String updateStatusHouse() {
        String freeze = request.getParameter("status");// freeze 冻结
        if(freeze != null) {
            short status = Short.valueOf(freeze);
            houseService.updateStatus(buildingId,status);
        } else if("1".equals(freeze)) {
            controllerResult = ControllerResult.getSuccessResult("户型可用");
        }else  if ("2".equals(freeze)){
            controllerResult = ControllerResult.getFailResult("户型不可用");
        }
        return SUCCESS;
    }

    /***
     * 楼栋的分页查看
     * @return
     */
    public String pagerBuilding() {
        int pagerSize = Integer.valueOf(request.getParameter("rows"));
        Pager<Building> buildingPager = new Pager<>();
        buildingPager.setPage(pager); //得到用户在页面选择的第几页数据
        buildingPager.setPageSize(pagerSize); //得到用户在设置页面分页显示多少数据
        buildingPager = buildingService.listPager(buildingPager);
        List<Building> result = buildingPager.getResult();//获取到所有的楼栋
        rows = new ArrayList<>();
        for (Building b : result) {
            rows.add(b);
        }
        total = buildingService.count(); //查询出经销商的整数
        return SUCCESS;
    }

    /***
     * 户型的分页查看
     * @return
     */
    public String pagerHouse() {
        int pagerSize = Integer.valueOf(request.getParameter("rows"));
        Pager<House> housePager = new Pager<>();
        housePager.setPage(pager); //得到用户在页面选择的第几页数据
        housePager.setPageSize(pagerSize); //得到用户在设置页面分页显示多少数据
        housePager = houseService.listPager(housePager);
        List<House> result = housePager.getResult();//获取到所有的楼栋
        rows = new ArrayList<>();
        for (House b : result) {
            rows.add(b);
        }
        total = houseService.count(); //查询出经销商的整数
        return SUCCESS;
    }


    public void setAgencyService(AgencyService agencyService) {
        this.agencyService = agencyService;
    }

    public void setBuildingService(BuildingService buildingService) {
        this.buildingService = buildingService;
    }

    public void setBuildingId(String buildingId) {
        this.buildingId = buildingId;
    }

    public void setControllerResult(ControllerResult controllerResult) {
        this.controllerResult = controllerResult;
    }

    public void setHouseService(HouseService houseService) {
        this.houseService = houseService;
    }

    public void setPager(int pager) {
        this.pager = pager;
    }

    public int getTotal() {
        return total;
    }

    public List<Object> getRows() {
        return rows;
    }
}
