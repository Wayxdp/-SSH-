package com.ht.controller;

import com.ht.bean.Agency;
import com.ht.bean.User;
import com.ht.common.ControllerResult;
import com.ht.common.EncryptUtil;
import com.ht.common.Pager;
import com.ht.common.msg.VerifyCodeUtil;
import com.ht.service.AgencyService;

import java.util.Arrays;
import java.util.List;

public class AgencyController extends AppController {
    private Agency agency;

    private ControllerResult controllerResult;
    private Integer total;
    private List<Agency> rows;

    private AgencyService agencyService;
    private Integer page;
    private String id;//得到页面选择的id
    private Short status;//得到页面的状态

    public String register() {
        if (session.getAttribute("verifyCode").equals(request.getParameter("verifyCode"))) {
            System.out.println("com/ht/controller/AgencyController.java:27");
            session.removeAttribute("verifyCode");
            if (checkPhone().equals(SUCCESS) && checkEmail().equals(SUCCESS)) {
                agency.setPwd(EncryptUtil.md5(agency.getPwd()));;
                agencyService.save(agency);
                return SUCCESS;
            }
            return "fail";
        } else {
            return "fail";
        }
    }
    
    /**
     * 发送短信验证码
     * @return
     */
    public String sendVerifyCode() {
        String phone = request.getParameter("phone");
        String verifyCode = VerifyCodeUtil.getVerifyCode();
        System.out.println("com/ht/controller/AgencyController.java:31.." + verifyCode);
        session.setAttribute("verifyCode", verifyCode);
//        IndustrySMS.execute(phone,verifyCode); //快答辩时再放开这注释（发短信要收费的）。
        controllerResult = ControllerResult.getSuccessResult("发送验证码成功");
        return SUCCESS;
    }

    /**
     * 赖：检查经销商邮箱是否存在
     * @return
     */
    public String checkEmail() {
        Agency reg_agency = agencyService.foundByEmail(agency.getEmail());
        if (reg_agency == null) {
            controllerResult = ControllerResult.getSuccessResult("✔");
            controllerResult.setMessageColor("green");
            return SUCCESS;
        }
        controllerResult = ControllerResult.getSuccessResult("该邮箱已注册");
        controllerResult.setMessageColor("red");
        return "fail";
    }

    /**
     * 2.校验手机号
     */
    public String checkPhone() {
        Agency reg_agency = agencyService.foundByPhone(agency.getPhone());
        if (reg_agency == null) {
            controllerResult = ControllerResult.getSuccessResult("✔");
            controllerResult.setMessageColor("green");
            return SUCCESS;
        }
        controllerResult = ControllerResult.getFailResult("该手机号已注册");
        controllerResult.setMessageColor("red");
        return "fail";
    }

    /***
     * 经销商修改自己的基本信息
     * @return
     */
    public String baseMessage() {
        agency = agencyService.foundById(id);
        return "showAlterAgency";
    }

    /**
     * 分页显示所有经销商
     */
    public String pagerAgency(){
        int pageSize = Integer.valueOf(request.getParameter("rows")); // 每一页显示多少个数据
        Pager<Agency> pager = new Pager<>();//创建分页对象
        pager.setPage(page);//得到用户页面选择的第几页，
        pager.setPageSize(pageSize);//得到用户在页面设置一页显示多少个数据
        pager = agencyService.listPager(pager);
        rows = pager.getResult();//查询出所有经销商
        total = agencyService.count(pager).intValue();//查询出经销商总数
        return SUCCESS;
    }

    /**
     * 经销商激活与冻结
     * @return
     */
    public String statusAgency() {
        if (status==1) {
            agencyService.updateStatus(id,status);
            controllerResult = ControllerResult.getSuccessResult("激活成功！");
        } else if (status==0) {
            agencyService.updateStatus(id,status);
            controllerResult = ControllerResult.getSuccessResult("冻结成功！");
        } else {
            controllerResult = ControllerResult.getFailResult("操作失败!");
        }
        return SUCCESS;
    }
    // 更新经销商
    public String updateAgency(){
//        agency = new Agency();
        System.out.println(agency);
        agencyService.update(agency);
        return SUCCESS;
    }
    //查看未经审核的经销商\
    public String foundUncheckedAgencies(){
         rows =agencyService.foundByUnchecked((short) 0);
        return "foundUncheckedAgencies";
    }
    //参看已审核的经销商
    public String foundCheckedAgencies(){
        rows =agencyService.foundByUnchecked((short) 1);
        return "foundCheckedAgencies";
    }
    //批量审核经销商以及单独审核
    public String checkedAgencies(){
        String tempStr =request.getParameter("id");
        String[] strId = tempStr.split(",");
        agencyService.updateCheckedStatus(strId, (short) 1);
        return "checkedAgencies";
    }

    //批量否决经销商以及单独否决
    public String UncheckedAgencies(){
        String tempStr =request.getParameter("id");
        String[] strId = tempStr.split(",");
        agencyService.updateCheckedStatus(strId, (short) 0);
        return "UncheckedAgencies";
    }
    public void setAgency(Agency agency) {
        this.agency = agency;
    }

    public Agency getAgency() {
        return agency;
    }

    public ControllerResult getControllerResult() {
        return controllerResult;
    }

    public List<Agency> getRows() {
        return rows;
    }

    public Integer getTotal() {
        return total;
    }

    public void setAgencyService(AgencyService agencyService) {
        this.agencyService = agencyService;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public void setId(String id) {
        this.id = id;
    }

    public void setStatus(Short status) {
        this.status = status;
    }

}
